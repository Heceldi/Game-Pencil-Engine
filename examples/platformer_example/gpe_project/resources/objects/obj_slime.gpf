#    --------------------------------------------------  # 
#     
#     
#    Game Pencil Engine Project GameObject File 
#    Created automatically via the Game Pencil Engine Editor 
#    Warning: Manually editing this file may cause unexpected bugs and errors. 
#    If you have any problems reading this file please report it to debug@pawbyte.com . 
#     
#     
#    --------------------------------------------------  # 
Version=1.12
ResourceName=obj_slime
SpriteId=spr_slime
ParentGameObjectId=
NeedsCamera=1
IsMoveable=1
IsVisible=1
IsContinuous=0

CustomComponent=checkbox:testing==|||==0
CustomComponent=resourcedropdown:test123==|||==Textures,,,-1,

[[[Function=Constructor]]] 
this.horiSpeed = 2;
[[[Function=Main Logic]]] 
if( gpe.position_collides(this,this.getx()+this.horiSpeed, this.gety()-4,obj_block)!=IS_NULL)
{
    this.update_cords(this.xPast, this.yPast);
    this.horiSpeed*=-1;
}
else
{
    var nearFriend = gpe.position_collides(this,this.getx()+this.horiSpeed, this.gety(),obj_slime)
    if( nearFriend!=IS_NULL)
    {
        if( nearFriend.getx() < this.getx() )
        {
            nearFriend.horiSpeed = gpe.abs(nearFriend.horiSpeed)*-1;
            this.horiSpeed = gpe.abs(nearFriend.horiSpeed);
        }
        else
        {
            nearFriend.horiSpeed = gpe.abs(nearFriend.horiSpeed);
            this.horiSpeed = gpe.abs(nearFriend.horiSpeed)*-1;
        }
        /*if( this.canFlipValues && nearFriend.canFlipValues )
        {
            this.horiSpeed *= -1;
            nearFriend.horiSpeed = -gpe.sign(this.horiSpeed)*nearFriend.horiSpeed;
            this.canFlipValues = false;
            nearFriend.canFlipValues = false;
        }*/
    }
}
this.move_right( this.horiSpeed);

if (gpe.position_collides(this,this.getx(), this.gety() + 1, obj_block)==IS_NULL && gpe.position_collides(this,this.getx(), this.gety() + 1, obj_slime)==IS_NULL )
{
    this.yspeed += 1;
}

if( this.yspeed!=0)
{
    var _abs = gpe.abs(this.yspeed);
    var _sign = gpe.sign(this.yspeed);
    for (var i = 0; i < _abs; i++)
    {
        if (gpe.position_collides(this,this.getx(), this.gety() + _sign, obj_block)!=IS_NULL)
        {
            // hit ground/ceiling
            this.yspeed = 0;
            this.canJump = true
            break;
        }
        else if (gpe.position_collides(this,this.getx(), this.gety() + _sign, obj_slime)!=IS_NULL)
        {
            // hit ground/ceiling
            this.yspeed = 0;
            this.canJump = true
            break;
            this.move_up( _sign);
        }
        else this.move_down( _sign);
    }
}
[[[Function=Render]]] 
gpe.render_sprite( this.get_sprite(), this.spriteFrame,this.getx(), this.gety(),gpe.sign(this.horiSpeed) );